{"version":3,"sources":["components/step1.component.jsx","components/step2.component.jsx","components/step3.component.jsx","components/step4.component.jsx","App.js","serviceWorker.js","index.js"],"names":["StepOne","props","Form","useForm","form","console","log","useState","location","state","numberPeople","setNumberPeople","meal","setMeal","layout","Item","label","value","onChange","map","index","Option","key","max","min","number","type","onClick","history","push","pathname","StepTwo","data","dishes","restaurant","setRestaurant","datafakeRestaurant","dataRealRestaurant","element","availableMeals","item","filter","elem","pos","indexOf","style","display","justifyContent","StepThree","dataDish","dish","setDish","numOfServing","setNumOfServing","id","name","StepFour","className","alert","App","basename","process","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0b035438.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { Form, InputNumber, Select, Button } from 'antd'\r\n\r\n\r\nconst StepOne = (props) => {\r\n    const [form] = Form.useForm();\r\n    console.log('props', props)\r\n    const meals = [\r\n        {\r\n            value: '1',\r\n            label: 'breakfast',\r\n        },\r\n        {\r\n            value: '2',\r\n            label: 'lunch',\r\n        },\r\n        {\r\n            value: '3',\r\n            label: 'dinner',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    const [numberPeople, setNumberPeople] = useState(props.location && props.location.state && props.location.state.numberPeople ? props.location.state.numberPeople : '')\r\n    const [meal, setMeal] = useState(props.location && props.location.state && props.location.state.meal ? props.location.state.meal : '')\r\n    const handleMealChange = (value) => {\r\n        setMeal(value)\r\n    }\r\n\r\n    const handleNumberPeopleChange = (number) => {\r\n        setNumberPeople(number)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        console.log(props);\r\n        props.history.push({\r\n            pathname: `/step2/${meal}`,\r\n            state: { numberPeople: numberPeople, meal: meal }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n\r\n        >\r\n            <Form.Item label=\"Please select a meal\">\r\n                <Select value={meal} onChange={handleMealChange}>\r\n                    {\r\n                        meals.map((meal, index) => (\r\n                            <Select.Option key={index} value={meal.label}>{meal.label}</Select.Option>\r\n                        ))\r\n                    }\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item label=\"Please Enter Number of people\">\r\n                <InputNumber value={numberPeople === '' ? 1 : numberPeople} max={10} min={1} onChange={handleNumberPeopleChange} />\r\n            </Form.Item>\r\n            <Button type=\"primary\" onClick={handleClick} >Next</Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default StepOne;\r\n","import React, { useState } from 'react';\r\nimport { Form, Select, Button } from 'antd';\r\nimport dishes from '../data/dishes.json';\r\n\r\nconst StepTwo = (props) => {\r\n    const [form] = Form.useForm();\r\n    const data = dishes.dishes;\r\n    const [restaurant, setRestaurant] = useState(props.location && props.location.state && props.location.state.restaurant ? props.location.state.restaurant : '');\r\n\r\n    let datafakeRestaurant = [];\r\n    let dataRealRestaurant = [];\r\n    data.map(element => {\r\n        for (let value of element.availableMeals) {\r\n            if (props.location.state.meal === value) {\r\n                datafakeRestaurant.push(element);\r\n            }\r\n        }\r\n    })\r\n\r\n    dataRealRestaurant = datafakeRestaurant.map(item => item.restaurant);\r\n\r\n    dataRealRestaurant = dataRealRestaurant.filter(function (elem, pos) {\r\n        return dataRealRestaurant.indexOf(elem) === pos;\r\n    });\r\n\r\n\r\n\r\n    const handleRestaurantChange = (value) => {\r\n        setRestaurant(value);\r\n    }\r\n\r\n    const handleBackClick = () => {\r\n        props.history.push({\r\n            pathname: \"/\",\r\n            state: {\r\n                numberPeople: props.location.state.numberPeople,\r\n                meal: props.location.state.meal,\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleNextClick = () => {\r\n        props.history.push({\r\n            pathname: `/step3/${restaurant}`,\r\n            state: {\r\n                numberPeople: props.location.state.numberPeople,\r\n                meal: props.location.state.meal,\r\n                restaurant: restaurant\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n        >\r\n            <Form.Item label=\"Please select a Restaurant\">\r\n                <Select value={restaurant} onChange={handleRestaurantChange}>\r\n                    {\r\n                        dataRealRestaurant.map((item, index) => (\r\n                            <Select.Option key={index} value={item}>{item}</Select.Option>\r\n                        ))\r\n                    }\r\n                </Select>\r\n            </Form.Item>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <Button type=\"primary\" onClick={handleBackClick}>Previous</Button>\r\n                <Button type=\"primary\" onClick={handleNextClick}>Next</Button>\r\n            </div>\r\n        </Form>\r\n    )\r\n};\r\n\r\nexport default StepTwo;","import React, { useState } from 'react';\r\nimport { Form, Select, Button, InputNumber } from 'antd';\r\n\r\nimport dishes from '../data/dishes.json';\r\n\r\n\r\nconst StepThree = (props) => {\r\n    const [form] = Form.useForm();\r\n    let data = dishes.dishes;\r\n    let dataDish = [];\r\n\r\n    console.log(props, 'props step 3')\r\n\r\n\r\n    data.map(element => {\r\n        if (element.restaurant === props.location.state.restaurant) {\r\n            dataDish.push(element);\r\n        }\r\n    })\r\n\r\n    // console.log(dataDish, 'data Dish can co')\r\n\r\n    const handleBackClick = () => {\r\n        props.history.push({\r\n            pathname: `/step2/${props.location.state.restaurant}`,\r\n            state: {\r\n                meal: props.location.state.meal,\r\n                numberPeople: props.location.state.numberPeople,\r\n                restaurant: props.location.state.restaurant,\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleNextClick = () => {\r\n        props.history.push({\r\n            pathname: `/step4/review`,\r\n            state: {\r\n                numberPeople: props.location.state.numberPeople,\r\n                meal: props.location.state.meal,\r\n                restaurant: props.location.state.restaurant,\r\n                dish: dish,\r\n                numOfServing: numOfServing\r\n            }\r\n        })\r\n    }\r\n\r\n    const [dish, setDish] = useState(props.location && props.location.state && props.location.state.dish ? props.location.state.dish : '');\r\n    const [numOfServing, setNumOfServing] = useState(props.location && props.location.state && props.location.state.numOfServing ? props.location.state.numOfServing : '');\r\n\r\n\r\n    const handleDishChange = (value) => {\r\n        setDish(value);\r\n    }\r\n\r\n    const handleNumOfServeChange = (number) => {\r\n        setNumOfServing(number);\r\n    }\r\n    return (\r\n        <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n        >\r\n            <Form.Item label=\"Please select a dish\">\r\n                <Select value={dish} onChange={handleDishChange}>\r\n                    {\r\n                        dataDish.map(item => (\r\n                            <Select.Option key={item.id} value={item.name} >{item.name}</Select.Option>\r\n                        ))\r\n                    }\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item label=\"Please enter no of servings\">\r\n                <InputNumber value={numOfServing === '' ? 1 : numOfServing} max={10} min={0} onChange={handleNumOfServeChange} />\r\n            </Form.Item>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <Button type=\"primary\" onClick={handleBackClick}>Previous</Button>\r\n                <Button type=\"primary\" onClick={handleNextClick}>Next</Button>\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default StepThree;","import { Button, Form } from 'antd';\r\nimport React from 'react';\r\n\r\nconst StepFour = (props) => {\r\n    const [form] = Form.useForm();\r\n\r\n    const { restaurant, numOfServing, meal, dish, numberPeople } = props.location.state;\r\n\r\n    const handleBackClick = () => {\r\n        props.history.push({\r\n            pathname: `/step3/${props.location.state.restaurant}`,\r\n            state: {\r\n                meal: props.location.state.meal,\r\n                restaurant: props.location.state.restaurant,\r\n                numberPeople: props.location.state.numberPeople,\r\n                dish: props.location.state.dish,\r\n                numOfServing: props.location.state.numOfServing,\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        alert(\"Thank you for using our services!!\")\r\n    }\r\n    return (\r\n        <div>\r\n            <Form\r\n                form={form}\r\n                className=\"ant-form-customize\"\r\n            >\r\n                <div> Meal: <span>{meal}</span> </div>\r\n                <div> No of People: <span>{numberPeople}</span> </div>\r\n                <div> Restaurant: <span>{restaurant}</span> </div>\r\n                <div> Dishes: <span> {dish} - {numOfServing} </span> </div>\r\n            </Form>\r\n            <div className=\"buttons\">\r\n                <Button type=\"primary\" onClick={handleBackClick}> Previous </Button>\r\n                <Button type=\"primary\" onClick={handleSubmit}> Submit </Button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default StepFour;","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport StepOne from './components/step1.component';\nimport StepTwo from './components/step2.component';\nimport StepThree from './components/step3.component';\nimport StepFour from './components/step4.component';\n\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Route exact path=\"/\" component={StepOne} />\n        <Route path=\"/step2/:id\" component={StepTwo} />\n        <Route path=\"/step3/:id\" component={StepThree} />\n        <Route path=\"/step4/review\" component={StepFour} />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}