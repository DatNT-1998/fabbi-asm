{"version":3,"sources":["components/step1.component.jsx","components/step2.component.jsx","components/step33.component.jsx","components/step4.component.jsx","components/menubar.component.jsx","App.js","serviceWorker.js","index.js"],"names":["StepOne","props","Form","useForm","form","console","log","useState","location","state","numberPeople","setNumberPeople","meal","setMeal","layout","Item","label","rules","required","message","value","onChange","map","index","Option","key","type","max","min","number","onClick","alert","history","push","pathname","StepTwo","data","dishes","restaurant","setRestaurant","datafakeRestaurant","dataRealRestaurant","element","availableMeals","item","filter","elem","pos","indexOf","style","display","justifyContent","dataNormal","StepThreeTH","getFieldValue","setFieldsValue","name","dish","title","numOfServing","numServe","dataDish","finalDataSendandCheckDuplicateData","allData","arr","dataSend","e","undefined","dataDishes","test","users","userAdd","useEffect","length","onValuesChange","_","allValues","flex","defaultValue","id","List","fields","add","remove","field","marginBottom","align","fieldKey","marginRight","MinusCircleOutlined","marginTop","marginLeft","boxSizing","PlusCircleOutlined","every","StepFour","className","MenuBar","typeStep1","typeStep2","typeStep3","typeStep4","useLocation","split","App","basename","process","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.aa28b76a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Form, InputNumber, Select, Button } from \"antd\";\r\n\r\nconst StepOne = (props) => {\r\n  const [form] = Form.useForm();\r\n  console.log(\"props step 1\", props);\r\n  const meals = [\r\n    {\r\n      value: \"1\",\r\n      label: \"breakfast\",\r\n    },\r\n    {\r\n      value: \"2\",\r\n      label: \"lunch\",\r\n    },\r\n    {\r\n      value: \"3\",\r\n      label: \"dinner\",\r\n    },\r\n  ];\r\n\r\n  const [numberPeople, setNumberPeople] = useState(\r\n    props.location && props.location.state && props.location.state.numberPeople\r\n      ? props.location.state.numberPeople\r\n      : \"\"\r\n  );\r\n  const [meal, setMeal] = useState(\r\n    props.location && props.location.state && props.location.state.meal\r\n      ? props.location.state.meal\r\n      : \"\"\r\n  );\r\n  const handleMealChange = (value) => {\r\n    setMeal(value);\r\n  };\r\n\r\n  const handleNumberPeopleChange = (number) => {\r\n    setNumberPeople(number);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (meal === \"\") {\r\n      alert(\"Please select a meal\");\r\n    } else {\r\n      props.history.push({\r\n        pathname: `/step2/${meal}`,\r\n        state: { numberPeople: numberPeople, meal: meal },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form form={form} layout=\"vertical\">\r\n      <Form.Item label=\"Please select a meal\" rules={[{ required: true, message: 'Please select a meal!' }]}>\r\n        <Select value={meal} onChange={handleMealChange}>\r\n          {meals.map((meal, index) => (\r\n            <Select.Option key={index} value={meal.label}>\r\n              {meal.label}\r\n            </Select.Option>\r\n          ))}\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item label=\"Please Enter Number of people\">\r\n        <InputNumber\r\n          type=\"number\"\r\n          value={numberPeople === \"\" ? setNumberPeople(1) : numberPeople}\r\n          max={10}\r\n          min={1}\r\n          onChange={handleNumberPeopleChange}\r\n        />\r\n      </Form.Item>\r\n      <Button type=\"primary\" onClick={handleClick}>\r\n        Next\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default StepOne;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Select, Button } from \"antd\";\r\nimport dishes from \"../data/dishes.json\";\r\n\r\nconst StepTwo = (props) => {\r\n  const [form] = Form.useForm();\r\n  const data = dishes.dishes;\r\n  console.log(props, \"props step 2\");\r\n  const [restaurant, setRestaurant] = useState(\r\n    props.location && props.location.state && props.location.state.restaurant\r\n      ? props.location.state.restaurant\r\n      : \"\"\r\n  );\r\n\r\n  let datafakeRestaurant = [];\r\n  let dataRealRestaurant = [];\r\n  data.map((element) => {\r\n    for (let value of element.availableMeals) {\r\n      if (props.location.state.meal === value) {\r\n        datafakeRestaurant.push(element);\r\n      }\r\n    }\r\n  });\r\n\r\n  dataRealRestaurant = datafakeRestaurant.map((item) => item.restaurant);\r\n\r\n  dataRealRestaurant = dataRealRestaurant.filter(function (elem, pos) {\r\n    return dataRealRestaurant.indexOf(elem) === pos;\r\n  });\r\n\r\n  const handleRestaurantChange = (value) => {\r\n    setRestaurant(value);\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    props.history.push({\r\n      pathname: \"/\",\r\n      state: {\r\n        numberPeople: props.location.state.numberPeople,\r\n        meal: props.location.state.meal,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleNextClick = () => {\r\n    if (restaurant === \"\") {\r\n      alert(\"Please select a restaurant\");\r\n    } else {\r\n      props.history.push({\r\n        pathname: `/step3/${restaurant}`,\r\n        state: {\r\n          numberPeople: props.location.state.numberPeople,\r\n          meal: props.location.state.meal,\r\n          restaurant: restaurant,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form form={form} layout=\"vertical\">\r\n      <Form.Item label=\"Please select a Restaurant\">\r\n        <Select value={restaurant} onChange={handleRestaurantChange}>\r\n          {dataRealRestaurant.map((item, index) => (\r\n            <Select.Option key={index} value={item}>\r\n              {item}\r\n            </Select.Option>\r\n          ))}\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <Button type=\"primary\" onClick={handleBackClick}>\r\n          Previous\r\n        </Button>\r\n        <Button type=\"primary\" onClick={handleNextClick}>\r\n          Next\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default StepTwo;\r\n","import React, { useEffect } from \"react\";\r\nimport { Form, Select, Button, InputNumber, Space, Input } from \"antd\";\r\nimport { MinusCircleOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport { GLOBAL } from '../constants'\r\nimport dishes from \"../data/dishes.json\";\r\n\r\n\r\nconst { set_3_data = {} } = GLOBAL || {}\r\nlet dataNormal = [];\r\nconst StepThreeTH = (props) => {\r\n\r\n    console.log(props, \"prop step3\");\r\n    const [form] = Form.useForm();\r\n    console.log(\"form: \", form);\r\n    const { getFieldValue, setFieldsValue, name } = form\r\n\r\n    // console.log(\"setFieldsValue: \", setFieldsValue());\r\n\r\n    let dish = props.location && props.location.state && props.location.state.dishes ? props.location.state.dishes[0].title : \"\";\r\n    let numOfServing = props.location && props.location.state && props.location.state.dishes ? props.location.state.dishes[0].numServe : 1;\r\n    const handleDishChange = (value) => {\r\n        dish = value;\r\n    };\r\n\r\n    const handleNumOfServeChange = (number) => {\r\n        // finalDataSendandCheckDuplicateData\r\n        // step 1: numServe onChange => finalDataSendandCheckDuplicateData\r\n        numOfServing = number;\r\n    };\r\n\r\n    let data = dishes.dishes;\r\n    let dataDish = [];\r\n    console.log(\"dataNormal\", dataNormal);\r\n\r\n    data.map((element) => {\r\n        if (element.restaurant === props.location.state.restaurant) {\r\n            dataDish.push(element);\r\n        }\r\n    });\r\n\r\n    const handleBackClick = () => {\r\n        props.history.push({\r\n            pathname: `/step2/${props.location.state.restaurant}`,\r\n            state: {\r\n                meal: props.location.state.meal,\r\n                numberPeople: props.location.state.numberPeople,\r\n                restaurant: props.location.state.restaurant,\r\n            },\r\n        });\r\n    };\r\n\r\n    const handleNextClick = () => {\r\n        if (dish === \"\") {\r\n            debugger\r\n            dataNormal.every(function (element) { return !!element.numServe && !!element.title; });\r\n            alert(\"please select a dish\");\r\n        } else {\r\n            debugger\r\n            const data = finalDataSendandCheckDuplicateData();\r\n            props.history.push({\r\n                pathname: `/step4/review`,\r\n                state: {\r\n                    numberPeople: props.location.state.numberPeople,\r\n                    meal: props.location.state.meal,\r\n                    restaurant: props.location.state.restaurant,\r\n                    dish: data,\r\n                },\r\n            });\r\n        }\r\n    };\r\n\r\n    // kiểm tra trùng title, khi trùng title thì cộng số lượng của numServe cho cái đầu tiên\r\n    // let dataSend = [];\r\n    // const checkDuplicateTitle = () => {\r\n\r\n\r\n\r\n    //     console.log(dataNormal, \"data normal lllllllllllllll\");\r\n\r\n    //     checkDuplicateTitle();\r\n\r\n    //     console.log(\"dataSend lllll\", dataSend);\r\n    // };\r\n\r\n    const finalDataSendandCheckDuplicateData = () => {\r\n        // dataNormal = [{ title: dish, numServe: numOfServing }, ...dataNormal]\r\n        const allData = [{ title: dish, numServe: numOfServing }, ...dataNormal]\r\n        let arr = [];\r\n        let dataSend = [];\r\n        allData.map((e) => {\r\n            if (e === undefined) {\r\n                return;\r\n            }\r\n            else if (arr[e.title]) {\r\n                arr[e.title] += e.numServe;\r\n            } else arr[e.title] = e.numServe;\r\n        });\r\n\r\n        for (const key in arr) {\r\n            dataSend.push({\r\n                title: key,\r\n                numServe: arr[key],\r\n            });\r\n        }\r\n\r\n        return dataSend;\r\n    }\r\n\r\n    const dataDishes =\r\n        props.location && props.location.state && props.location.state.dishes\r\n            ? props.location.state.dishes\r\n            : [];\r\n\r\n    useEffect(() => {\r\n        console.log(dataDishes, \"dataDishes can dung de render lai\");\r\n        for (let index = 1; index < dataDishes.length; index++) {\r\n            test({\r\n                title: dataDishes[index].title,\r\n                numServe: dataDishes[index].numServe,\r\n            })\r\n        }\r\n\r\n    }, [props.location])\r\n\r\n    function test(data = {}) {\r\n        const { users = [] } = getFieldValue()\r\n        const userAdd = [\r\n            ...users,\r\n        ]\r\n        userAdd.push(data)\r\n        setFieldsValue({\r\n            users: userAdd\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n            onValuesChange={(_, allValues) => {\r\n                console.log(allValues, \"all Value Changes\");\r\n                console.log(\"getFieldValue: \", getFieldValue());\r\n                console.log(\"name: \", name);\r\n                // clear dataNormal = {}\r\n                dataNormal = [];\r\n                dataNormal = allValues.users;\r\n            }}\r\n\r\n        >\r\n            <div\r\n                style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n            >\r\n                <Form.Item label=\"Please select a dish\" style={{ flex: 0.95 }}>\r\n                    <Select defaultValue={dish} onChange={handleDishChange}>\r\n                        {dataDish.map((item) => (\r\n                            <Select.Option key={item.id} value={item.name}>\r\n                                {item.name}\r\n                            </Select.Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item label=\"Please enter no of servings\">\r\n                    <InputNumber\r\n                        type=\"number\"\r\n                        defaultValue={numOfServing}\r\n                        max={10}\r\n                        min={0}\r\n                        onChange={handleNumOfServeChange}\r\n                    />\r\n                </Form.Item>\r\n            </div>\r\n            <Form.List name=\"users\"   >\r\n                {(fields, { add, remove }) => {\r\n                    return (\r\n                        <div>\r\n                            {\r\n                                fields.map((field) => (\r\n                                    <Space\r\n                                        key={field.key}\r\n                                        style={{ display: \"flex\", marginBottom: 8 }}\r\n                                        align=\"start\"\r\n                                    >\r\n                                        <Form.Item\r\n                                            label=\"Please select a dish\"\r\n                                            {...field}\r\n                                            name={[field.name, \"title\"]}\r\n                                            fieldKey={[field.fieldKey, \"title\"]}\r\n                                            style={{ flex: \"0.95\", marginRight: \"8px\" }}\r\n                                            rules={[{ required: true, message: 'Please choose the dish!' }]}\r\n\r\n                                        >\r\n                                            <Select>\r\n                                                {dataDish.map((item) => (\r\n                                                    <Select.Option key={item.id} value={item.name}>\r\n                                                        {\" \"}\r\n                                                        {item.name}{\" \"}\r\n                                                    </Select.Option>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            label=\"Please enter no of servings\"\r\n                                            name={[field.name, \"numServe\"]}\r\n                                            fieldKey={[field.fieldKey, \"numServe\"]}\r\n                                            rules={[{ required: true, message: 'Please select a number!' }]}\r\n                                        >\r\n                                            <InputNumber type=\"number\" max={10} min={0} />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item>\r\n                                            <MinusCircleOutlined\r\n                                                style={{\r\n                                                    marginTop: \"16px\",\r\n                                                    marginLeft: \"16px\",\r\n                                                    boxSizing: \"border\",\r\n                                                }}\r\n                                                onClick={() => {\r\n                                                    remove(field.name);\r\n                                                }}\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Space>\r\n                                ))}\r\n\r\n                            <Form.Item>\r\n                                <PlusCircleOutlined onClick={() => add()} />\r\n                            </Form.Item>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Form.List>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <Button type=\"primary\" onClick={handleBackClick}>\r\n                    Previous\r\n                </Button>\r\n                <Button type=\"primary\" onClick={handleNextClick}>\r\n                    Next\r\n                </Button>\r\n            </div>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default StepThreeTH;\r\n\r\n/* <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                <Form.Item label=\"Please select a dish\" style={{ flex: 0.95 }}>\r\n                                        <Select value={dish} onChange={handleDishChange}>\r\n                                                {\r\n                                                        dataDish.map(item => (\r\n                                                                <Select.Option key={item.id} value={item.name} >{item.name}</Select.Option>\r\n                                                        ))\r\n                                                }\r\n                                        </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Please enter no of servings\">\r\n                                        <InputNumber value={numOfServing === '' ? setNumOfServing(1) : numOfServing} max={10} min={0} onChange={handleNumOfServeChange} />\r\n                                </Form.Item>\r\n                        </div>\r\n                        <Form.List name=\"users\">\r\n                                {(fields, { add, remove }) => {\r\n                                        return (\r\n                                                <div>\r\n                                                        {fields.map((field) => (\r\n                                                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                        <Form.Item label=\"Please select a dish\" style={{ flex: 0.95 }} {...field}>\r\n                                                                                <Select value={dish} onChange={handleDishChange}>\r\n                                                                                        {\r\n                                                                                                dataDish.map(item => (\r\n                                                                                                        <Select.Option key={item.id} value={item.name} >{item.name}</Select.Option>\r\n                                                                                                ))\r\n                                                                                        }\r\n                                                                                </Select>\r\n                                                                        </Form.Item>\r\n                                                                        <Form.Item {...field} label=\"Please enter no of servings\">\r\n                                                                                <InputNumber value={numOfServing === '' ? setNumOfServing(1) : numOfServing} max={10} min={0} onChange={handleNumOfServeChange} />\r\n                                                                                <MinusCircleOutlined\r\n                                                                                        style={{ marginLeft: '10px' }}\r\n                                                                                        onClick={() => {\r\n                                                                                                remove(field.name);\r\n                                                                                        }}\r\n                                                                                />\r\n                                                                        </Form.Item>\r\n\r\n                                                                </div>\r\n                                                        ))}\r\n                                                        <Form.Item>\r\n                                                                <PlusCircleOutlined onClick={() => add()} />\r\n                                                        </Form.Item>\r\n                                                </div>\r\n                                        );\r\n                                }}\r\n                        </Form.List> */\r\n","import { Button, Form } from 'antd';\r\nimport React from 'react';\r\n\r\nconst StepFour = (props) => {\r\n    const [form] = Form.useForm();\r\n\r\n    const { restaurant, meal, dish, numberPeople } = props.location.state;\r\n\r\n    console.log('Mang cac dish duoc su dung', dish);\r\n    console.log('location', props.location.state);\r\n\r\n    const handleBackClick = () => {\r\n        props.history.push({\r\n            pathname: `/step3/${props.location.state.restaurant}`,\r\n            state: {\r\n                meal: props.location.state.meal,\r\n                restaurant: props.location.state.restaurant,\r\n                numberPeople: props.location.state.numberPeople,\r\n                dishes: dish,\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        alert(\"Thank you for using our services!!\")\r\n    }\r\n    return (\r\n        <div>\r\n            <Form\r\n                form={form}\r\n                className=\"ant-form-customize\"\r\n            >\r\n                <div> Meal: <span>{meal}</span> </div>\r\n                <div> No of People: <span>{numberPeople}</span> </div>\r\n                <div> Restaurant: <span>{restaurant}</span> </div>\r\n                <div className=\"dish-title\" > <span>Dishes:</span> <ul className=\"review-dish\"> {dish.map((item, index) => (\r\n                    <li key={index}> <span> {item.title} </span> - <span> {item.numServe} </span>  </li>\r\n                ))}\r\n                </ul>\r\n                </div>\r\n            </Form>\r\n            <div className=\"buttons\">\r\n                <Button type=\"primary\" onClick={handleBackClick}> Previous </Button>\r\n                <Button type=\"primary\" onClick={handleSubmit}> Submit </Button>\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default StepFour;","import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { Button } from \"antd\";\r\n\r\nconst MenuBar = (props) => {\r\n  //   const [typeStep1, setTypeStep1] = useState(\"\");\r\n  //   const [typeStep2, setTypeStep2] = useState(\"\");\r\n  //   const [typeStep3, setTypeStep3] = useState(\"\");\r\n  //   const [typeStep4, setTypeStep4] = useState(\"\");\r\n  let typeStep1 = \"\";\r\n  let typeStep2 = \"\";\r\n  let typeStep3 = \"\";\r\n  let typeStep4 = \"\";\r\n  let location = useLocation();\r\n\r\n  useEffect(() => { }, [location]);\r\n  const { pathname = \"\" } = location || {};\r\n  console.log(pathname, \"pathnameeeee\");\r\n  const pathStep = pathname.split(\"/\")[1];\r\n  switch (pathStep) {\r\n    case \"step2\":\r\n      typeStep2 = \"primary\";\r\n      break;\r\n    case \"step3\":\r\n      typeStep3 = \"primary\";\r\n      break;\r\n    case \"step4\":\r\n      typeStep4 = \"primary\";\r\n      break;\r\n    default:\r\n      typeStep1 = \"primary\";\r\n  }\r\n  return (\r\n    <div className=\"tab-bar\" >\r\n      <Button type={typeStep1}> Step 1 </Button>\r\n      <Button type={typeStep2}> Step 2 </Button>\r\n      <Button type={typeStep3}> Step 3 </Button>\r\n      <Button type={typeStep4}> Review </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuBar;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nimport StepOne from \"./components/step1.component\";\r\nimport StepTwo from \"./components/step2.component\";\r\nimport StepThree from \"./components/step3.component\";\r\nimport StepThreeTH from \"./components/step33.component\";\r\nimport StepFour from \"./components/step4.component\";\r\n\r\nimport \"./App.css\";\r\nimport MenuBar from \"./components/menubar.component\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <MenuBar />\r\n        <Route exact path=\"/\" component={StepOne} />\r\n        <Route path=\"/step2/:id\" component={StepTwo} />\r\n        <Route path=\"/step3/:id\" component={StepThreeTH} />\r\n        <Route path=\"/step4/review\" component={StepFour} />\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}