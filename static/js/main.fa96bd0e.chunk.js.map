{"version":3,"sources":["components/step1.component.jsx","components/step2.component.jsx","components/step3.component.jsx","components/step4.component.jsx","components/menubar.component.jsx","App.js","serviceWorker.js","index.js"],"names":["StepOne","props","Form","useForm","form","console","log","useState","location","state","numberPeople","setNumberPeople","meal","setMeal","layout","Item","label","value","onChange","map","index","Option","key","max","min","number","type","onClick","alert","history","push","pathname","StepTwo","data","dishes","restaurant","setRestaurant","datafakeRestaurant","dataRealRestaurant","element","availableMeals","item","filter","elem","pos","indexOf","style","display","justifyContent","StepThree","dataDish","dish","setDish","numOfServing","setNumOfServing","id","name","StepFour","className","MenuBar","typeStep1","typeStep2","typeStep3","typeStep4","useLocation","useEffect","split","marginBottom","App","basename","process","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fa96bd0e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Form, InputNumber, Select, Button } from \"antd\";\r\n\r\nconst StepOne = (props) => {\r\n  const [form] = Form.useForm();\r\n  console.log(\"props step 1\", props);\r\n  const meals = [\r\n    {\r\n      value: \"1\",\r\n      label: \"breakfast\",\r\n    },\r\n    {\r\n      value: \"2\",\r\n      label: \"lunch\",\r\n    },\r\n    {\r\n      value: \"3\",\r\n      label: \"dinner\",\r\n    },\r\n  ];\r\n\r\n  const [numberPeople, setNumberPeople] = useState(\r\n    props.location && props.location.state && props.location.state.numberPeople\r\n      ? props.location.state.numberPeople\r\n      : \"\"\r\n  );\r\n  const [meal, setMeal] = useState(\r\n    props.location && props.location.state && props.location.state.meal\r\n      ? props.location.state.meal\r\n      : \"\"\r\n  );\r\n  const handleMealChange = (value) => {\r\n    setMeal(value);\r\n  };\r\n\r\n  const handleNumberPeopleChange = (number) => {\r\n    setNumberPeople(number);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (meal === \"\") {\r\n      alert(\"Please select a meal\");\r\n    } else {\r\n      props.history.push({\r\n        pathname: `/step2/${meal}`,\r\n        state: { numberPeople: numberPeople, meal: meal },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form form={form} layout=\"vertical\">\r\n      <Form.Item label=\"Please select a meal\">\r\n        <Select value={meal} onChange={handleMealChange}>\r\n          {meals.map((meal, index) => (\r\n            <Select.Option key={index} value={meal.label}>\r\n              {meal.label}\r\n            </Select.Option>\r\n          ))}\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item label=\"Please Enter Number of people\">\r\n        <InputNumber\r\n          value={numberPeople === \"\" ? setNumberPeople(1) : numberPeople}\r\n          max={10}\r\n          min={1}\r\n          onChange={handleNumberPeopleChange}\r\n        />\r\n      </Form.Item>\r\n      <Button type=\"primary\" onClick={handleClick}>\r\n        Next\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default StepOne;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Select, Button } from \"antd\";\r\nimport dishes from \"../data/dishes.json\";\r\n\r\nconst StepTwo = (props) => {\r\n  const [form] = Form.useForm();\r\n  const data = dishes.dishes;\r\n  console.log(props, \"props step 2\");\r\n  const [restaurant, setRestaurant] = useState(\r\n    props.location && props.location.state && props.location.state.restaurant\r\n      ? props.location.state.restaurant\r\n      : \"\"\r\n  );\r\n\r\n  let datafakeRestaurant = [];\r\n  let dataRealRestaurant = [];\r\n  data.map((element) => {\r\n    for (let value of element.availableMeals) {\r\n      if (props.location.state.meal === value) {\r\n        datafakeRestaurant.push(element);\r\n      }\r\n    }\r\n  });\r\n\r\n  dataRealRestaurant = datafakeRestaurant.map((item) => item.restaurant);\r\n\r\n  dataRealRestaurant = dataRealRestaurant.filter(function (elem, pos) {\r\n    return dataRealRestaurant.indexOf(elem) === pos;\r\n  });\r\n\r\n  const handleRestaurantChange = (value) => {\r\n    setRestaurant(value);\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    props.history.push({\r\n      pathname: \"/step1\",\r\n      state: {\r\n        numberPeople: props.location.state.numberPeople,\r\n        meal: props.location.state.meal,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleNextClick = () => {\r\n    if (restaurant === \"\") {\r\n      alert(\"Please select a restaurant\");\r\n    } else {\r\n      props.history.push({\r\n        pathname: `/step3/${restaurant}`,\r\n        state: {\r\n          numberPeople: props.location.state.numberPeople,\r\n          meal: props.location.state.meal,\r\n          restaurant: restaurant,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form form={form} layout=\"vertical\">\r\n      <Form.Item label=\"Please select a Restaurant\">\r\n        <Select value={restaurant} onChange={handleRestaurantChange}>\r\n          {dataRealRestaurant.map((item, index) => (\r\n            <Select.Option key={index} value={item}>\r\n              {item}\r\n            </Select.Option>\r\n          ))}\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <Button type=\"primary\" onClick={handleBackClick}>\r\n          Previous\r\n        </Button>\r\n        <Button type=\"primary\" onClick={handleNextClick}>\r\n          Next\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default StepTwo;\r\n","import React, { useState } from 'react';\r\nimport { Form, Select, Button, InputNumber } from 'antd';\r\n\r\nimport dishes from '../data/dishes.json';\r\n\r\n\r\nconst StepThree = (props) => {\r\n    const [form] = Form.useForm();\r\n    let data = dishes.dishes;\r\n    let dataDish = [];\r\n\r\n    console.log(props, 'props step 3')\r\n\r\n\r\n    data.map(element => {\r\n        if (element.restaurant === props.location.state.restaurant) {\r\n            dataDish.push(element);\r\n        }\r\n    })\r\n\r\n    const handleBackClick = () => {\r\n        props.history.push({\r\n            pathname: `/step2/${props.location.state.restaurant}`,\r\n            state: {\r\n                meal: props.location.state.meal,\r\n                numberPeople: props.location.state.numberPeople,\r\n                restaurant: props.location.state.restaurant,\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleNextClick = () => {\r\n        if (dish === '') {\r\n            alert('please select a dish');\r\n        } else {\r\n            props.history.push({\r\n                pathname: `/step4/review`,\r\n                state: {\r\n                    numberPeople: props.location.state.numberPeople,\r\n                    meal: props.location.state.meal,\r\n                    restaurant: props.location.state.restaurant,\r\n                    dish: dish,\r\n                    numOfServing: numOfServing\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const [dish, setDish] = useState(props.location && props.location.state && props.location.state.dish ? props.location.state.dish : '');\r\n    const [numOfServing, setNumOfServing] = useState(props.location && props.location.state && props.location.state.numOfServing ? props.location.state.numOfServing : '');\r\n\r\n\r\n    const handleDishChange = (value) => {\r\n        setDish(value);\r\n    }\r\n\r\n    const handleNumOfServeChange = (number) => {\r\n        setNumOfServing(number);\r\n    }\r\n    return (\r\n        <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n        >\r\n            <Form.Item label=\"Please select a dish\">\r\n                <Select value={dish} onChange={handleDishChange}>\r\n                    {\r\n                        dataDish.map(item => (\r\n                            <Select.Option key={item.id} value={item.name} >{item.name}</Select.Option>\r\n                        ))\r\n                    }\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item label=\"Please enter no of servings\">\r\n                <InputNumber value={numOfServing === '' ? setNumOfServing(1) : numOfServing} max={10} min={0} onChange={handleNumOfServeChange} />\r\n            </Form.Item>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <Button type=\"primary\" onClick={handleBackClick}>Previous</Button>\r\n                <Button type=\"primary\" onClick={handleNextClick}>Next</Button>\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default StepThree;","import { Button, Form } from 'antd';\r\nimport React from 'react';\r\n\r\nconst StepFour = (props) => {\r\n    const [form] = Form.useForm();\r\n\r\n    const { restaurant, numOfServing, meal, dish, numberPeople } = props.location.state;\r\n\r\n    const handleBackClick = () => {\r\n        props.history.push({\r\n            pathname: `/step3/${props.location.state.restaurant}`,\r\n            state: {\r\n                meal: props.location.state.meal,\r\n                restaurant: props.location.state.restaurant,\r\n                numberPeople: props.location.state.numberPeople,\r\n                dish: props.location.state.dish,\r\n                numOfServing: props.location.state.numOfServing,\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        alert(\"Thank you for using our services!!\")\r\n    }\r\n    return (\r\n        <div>\r\n            <Form\r\n                form={form}\r\n                className=\"ant-form-customize\"\r\n            >\r\n                <div> Meal: <span>{meal}</span> </div>\r\n                <div> No of People: <span>{numberPeople}</span> </div>\r\n                <div> Restaurant: <span>{restaurant}</span> </div>\r\n                <div> Dishes: <span> {dish} - {numOfServing} </span> </div>\r\n            </Form>\r\n            <div className=\"buttons\">\r\n                <Button type=\"primary\" onClick={handleBackClick}> Previous </Button>\r\n                <Button type=\"primary\" onClick={handleSubmit}> Submit </Button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default StepFour;","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { Button } from \"antd\";\r\n\r\nconst MenuBar = (props) => {\r\n  //   const [typeStep1, setTypeStep1] = useState(\"\");\r\n  //   const [typeStep2, setTypeStep2] = useState(\"\");\r\n  //   const [typeStep3, setTypeStep3] = useState(\"\");\r\n  //   const [typeStep4, setTypeStep4] = useState(\"\");\r\n  let typeStep1 = \"\";\r\n  let typeStep2 = \"\";\r\n  let typeStep3 = \"\";\r\n  let typeStep4 = \"\";\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {}, [location]);\r\n  const { pathname = \"\" } = location || {};\r\n  console.log(pathname, \"pathnameeeee\");\r\n  const pathStep = pathname.split(\"/\")[1];\r\n  switch (pathStep) {\r\n    case \"step2\":\r\n      typeStep2 = \"primary\";\r\n      break;\r\n    case \"step3\":\r\n      typeStep3 = \"primary\";\r\n      break;\r\n    case \"step4\":\r\n      typeStep4 = \"primary\";\r\n      break;\r\n    default:\r\n      typeStep1 = \"primary\";\r\n  }\r\n  return (\r\n    <div style={{ marginBottom: \"30px\" }}>\r\n      <Button type={typeStep1}> Step 1 </Button>\r\n      <Button type={typeStep2}> Step 2 </Button>\r\n      <Button type={typeStep3}> Step 3 </Button>\r\n      <Button type={typeStep4}> Review </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuBar;\r\n","import React, { useState } from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\n\r\nimport StepOne from \"./components/step1.component\";\r\nimport StepTwo from \"./components/step2.component\";\r\nimport StepThree from \"./components/step3.component\";\r\nimport StepFour from \"./components/step4.component\";\r\n\r\nimport \"./App.css\";\r\nimport MenuBar from \"./components/menubar.component\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <MenuBar />\r\n        <Route exact path=\"/\" component={StepOne} />\r\n        <Route path=\"/step2/:id\" component={StepTwo} />\r\n        <Route path=\"/step3/:id\" component={StepThree} />\r\n        <Route path=\"/step4/review\" component={StepFour} />\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'antd/dist/antd.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}