{"version":3,"sources":["components/step1.component.jsx","components/step2.component.jsx","components/step3.component.jsx","components/step4.component.jsx","App.js","serviceWorker.js","index.js"],"names":["StepOne","props","Form","useForm","form","useState","meal","setMeal","numberPeople","setNumberPeople","layout","Item","label","onChange","value","map","index","Option","key","defaultValue","max","min","number","type","onClick","console","log","history","push","pathname","state","StepTwo","data","dishes","datafakeRestaurant","dataRealRestaurant","dataRestaurant","element","availableMeals","location","item","restaurant","filter","elem","pos","indexOf","setRestaurant","style","display","justifyContent","StepThree","dataDish","dish","setDish","numOfServing","setNumOfServing","id","name","StepFour","className","alert","App","basename","process","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7368d582.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { Form, InputNumber, Select, Button } from 'antd'\r\n\r\n\r\nconst StepOne = (props) => {\r\n    const [form] = Form.useForm();\r\n\r\n    const meals = [\r\n        {\r\n            value: '1',\r\n            label: 'breakfast',\r\n        },\r\n        {\r\n            value: '2',\r\n            label: 'lunch',\r\n        },\r\n        {\r\n            value: '3',\r\n            label: 'dinner',\r\n        },\r\n    ];\r\n\r\n\r\n    const [meal, setMeal] = useState('$')\r\n    const [numberPeople, setNumberPeople] = useState('')\r\n\r\n    const handleMealChange = (value) => {\r\n        setMeal(value)\r\n    }\r\n\r\n    const handleNumberPeopleChange = (number) => {\r\n        setNumberPeople(number)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        console.log(props);\r\n        props.history.push({\r\n            pathname: `/step2/${meal}`,\r\n            state: { numberPeople: numberPeople, meal: meal }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n\r\n        >\r\n            <Form.Item label=\"Please select a meal\">\r\n                <Select onChange={handleMealChange}>\r\n                    {\r\n                        meals.map((meal, index) => (\r\n                            <Select.Option key={index} value={meal.label}>{meal.label}</Select.Option>\r\n                        ))\r\n                    }\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item label=\"Please Enter Number of people\">\r\n                <InputNumber value={numberPeople} defaultValue={1} max={10} min={1} onChange={handleNumberPeopleChange} />\r\n            </Form.Item>\r\n            <Button type=\"primary\" onClick={handleClick} >Next</Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default StepOne;\r\n","import React, { useState } from 'react';\r\nimport { Form, Select, Button } from 'antd';\r\nimport dishes from '../data/dishes.json';\r\n\r\nconst StepTwo = (props) => {\r\n    const [form] = Form.useForm();\r\n\r\n    const data = dishes.dishes;\r\n    let datafakeRestaurant = [];\r\n    let dataRealRestaurant = [];\r\n    let dataRestaurant = [];\r\n\r\n    data.map(element => {\r\n        for (let value of element.availableMeals) {\r\n            if (props.location.state.meal === value) {\r\n                datafakeRestaurant.push(element);\r\n            }\r\n        }\r\n    })\r\n\r\n    dataRealRestaurant = datafakeRestaurant.map(item => item.restaurant);\r\n\r\n    dataRestaurant = dataRealRestaurant.filter(function (elem, pos) {\r\n        return dataRealRestaurant.indexOf(elem) == pos;\r\n    });\r\n\r\n    console.log(dataRestaurant, 'data can map');\r\n\r\n    const [restaurant, setRestaurant] = useState('');\r\n\r\n    const handleRestaurantChange = (value) => {\r\n        setRestaurant(value);\r\n    }\r\n\r\n    const handleBackClick = () => {\r\n        props.history.push({\r\n            pathname: \"/\"\r\n        })\r\n    }\r\n\r\n    const handleNextClick = () => {\r\n        props.history.push({\r\n            pathname: `/step3/${restaurant}`,\r\n            state: {\r\n                numberPeople: props.location.state.numberPeople,\r\n                meal: props.location.state.meal,\r\n                restaurant: restaurant\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n        >\r\n            <Form.Item label=\"Please select a Restaurant\">\r\n                <Select onChange={handleRestaurantChange}>\r\n                    {\r\n                        dataRestaurant.map((item, index) => (\r\n                            <Select.Option key={index} value={item}>{item}</Select.Option>\r\n                        ))\r\n                    }\r\n                </Select>\r\n            </Form.Item>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <Button type=\"primary\" onClick={handleBackClick}>Previous</Button>\r\n                <Button type=\"primary\" onClick={handleNextClick}>Next</Button>\r\n            </div>\r\n        </Form>\r\n    )\r\n};\r\n\r\nexport default StepTwo;","import React, { useState } from 'react';\r\nimport { Form, Select, Button, InputNumber } from 'antd';\r\n\r\nimport dishes from '../data/dishes.json';\r\n\r\n\r\nconst StepThree = (props) => {\r\n    const [form] = Form.useForm();\r\n    let data = dishes.dishes;\r\n    let dataDish = [];\r\n\r\n\r\n\r\n    data.map(element => {\r\n        if (element.restaurant === props.location.state.restaurant) {\r\n            dataDish.push(element);\r\n        }\r\n    })\r\n\r\n    // console.log(dataDish, 'data Dish can co')\r\n\r\n    const handleBackClick = () => {\r\n        props.history.push({\r\n            pathname: `/step2/${props.location.state.restaurant}`,\r\n            state: {\r\n                meal: props.location.state.meal\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleNextClick = () => {\r\n        props.history.push({\r\n            pathname: `/step4/review`,\r\n            state: {\r\n                numberPeople: props.location.state.numberPeople,\r\n                meal: props.location.state.meal,\r\n                restaurant: props.location.state.restaurant,\r\n                dish: dish,\r\n                numOfServing: numOfServing\r\n            }\r\n        })\r\n    }\r\n\r\n    const [dish, setDish] = useState('');\r\n    const [numOfServing, setNumOfServing] = useState('  ');\r\n\r\n\r\n    const handleDishChange = (value) => {\r\n        console.log(value, 'value dish')\r\n        setDish(value);\r\n    }\r\n\r\n    const handleNumOfServeChange = (number) => {\r\n        console.log(number, 'number')\r\n        setNumOfServing(number);\r\n    }\r\n    return (\r\n        <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n        >\r\n            <Form.Item label=\"Please select a dish\">\r\n                <Select onChange={handleDishChange}>\r\n                    {\r\n                        dataDish.map(item => (\r\n                            <Select.Option key={item.id} value={item.name} >{item.name}</Select.Option>\r\n                        ))\r\n                    }\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item label=\"Please enter no of servings\">\r\n                <InputNumber value={numOfServing} defaultValue=\"1\" max={10} min={0} onChange={handleNumOfServeChange} />\r\n            </Form.Item>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <Button type=\"primary\" onClick={handleBackClick}>Previous</Button>\r\n                <Button type=\"primary\" onClick={handleNextClick}>Next</Button>\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default StepThree;","import { Button, Form } from 'antd';\r\nimport React from 'react';\r\n\r\nconst StepFour = (props) => {\r\n    const [form] = Form.useForm();\r\n\r\n    console.log(props, 'ddddddd')\r\n    const { restaurant, numOfServing, meal, dish, numberPeople } = props.location.state;\r\n\r\n    const handleBackClick = () => {\r\n        props.history.push({\r\n            pathname: `/step3/${props.location.state.restaurant}`,\r\n            state: {\r\n                meal: props.location.state.meal,\r\n                restaurant: props.location.state.restaurant,\r\n                numberPeople: props.location.state.numberPeople\r\n            }\r\n        })\r\n        // console.log(this.state, 'state lúc bách về  ')\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        alert(\"Thank you for using our services!!\")\r\n    }\r\n    return (\r\n        <div>\r\n            <Form\r\n                form={form}\r\n                className=\"ant-form-customize\"\r\n            >\r\n                <div> Meal: <span>{meal}</span> </div>\r\n                <div> No of People: <span>{numberPeople}</span> </div>\r\n                <div> Restaurant: <span>{restaurant}</span> </div>\r\n                <div> Dishes: <span> {dish} - {numOfServing} </span> </div>\r\n            </Form>\r\n            <div className=\"buttons\">\r\n                <Button type=\"primary\" onClick={handleBackClick}> Previous </Button>\r\n                <Button type=\"primary\" onClick={handleSubmit}> Submit </Button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default StepFour;","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport StepOne from './components/step1.component';\nimport StepTwo from './components/step2.component';\nimport StepThree from './components/step3.component';\nimport StepFour from './components/step4.component';\n\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Route exact path=\"/\" component={StepOne} />\n        <Route path=\"/step2/:id\" component={StepTwo} />\n        <Route path=\"/step3/:id\" component={StepThree} />\n        <Route path=\"/step4/review\" component={StepFour} />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}